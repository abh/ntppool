#1
-- the static part: the servers etc.

alter database default character set 'utf8';

CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `email` varchar(255) NOT NULL default '',
  `name` varchar(255) default NULL,
  `pass` varchar(255) default NULL,
  `nomail` enum('0','1') NOT NULL default '0',
  `bitcard_id` char(40) default NULL,
  `username` varchar(40) default NULL,
  `public_profile` tinyint(1) not null default 0,
  `organization_name` varchar(150) default NULL,
  `organization_url` varchar(150) default NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `email` (`email`),
  UNIQUE KEY `users_email_key` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE servers (
    id int unsigned primary key auto_increment,
    ip varchar(15) NOT NULL unique,
    admin int unsigned not null,
    hostname varchar(255),
    stratum tinyint unsigned default NULL,
    in_pool tinyint unsigned NOT NULL,
    in_server_list tinyint unsigned NOT NULL,
    netspeed mediumint(8) unsigned NOT NULL default '1000',
    created_on datetime default NULL,
    updated_on timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
    index (admin),
    CONSTRAINT admin FOREIGN KEY (admin) REFERENCES users(id)
) engine=INNODB;

CREATE TABLE server_notes (
    id int unsigned primary key auto_increment,
    server int unsigned not null,
    name varchar(255) not null,
    note text not null,
    unique key (server,name),
    key (name),
    CONSTRAINT FOREIGN KEY (server) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE zones (
    id int unsigned primary key auto_increment,
    name varchar(255) NOT NULL UNIQUE,
    description varchar(255) default NULL,
    parent int(10) unsigned default NULL,
    dns tinyint(1) NOT NULL DEFAULT 1,
    KEY (parent),
    FOREIGN KEY (parent) REFERENCES zones(id)
) ENGINE=INNODB;

CREATE TABLE locations (
    id int unsigned primary key auto_increment,
    server int unsigned not null,
    zone   int unsigned not null,
    UNIQUE (server, zone),
    constraint locations_server FOREIGN KEY (server) REFERENCES servers(id) ON DELETE CASCADE,
    constraint locations_zone   FOREIGN KEY (zone) REFERENCES zones(id) ON DELETE CASCADE
) ENGINE=INNODB;

-- the dynamic part: logging
CREATE TABLE log_scores (
    id int not null auto_increment primary key,
    server INTEGER unsigned NOT NULL,
    ts timestamp NOT NULL,
    score REAL NOT NULL,
    step REAL NOT NULL,
    offset REAL,
    key (server,ts),
    constraint log_scores_server FOREIGN KEY (server) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;

-- this is a different table from 'servers' since it changes a lot
-- and in a different table from 'log' as we only store the current score
CREATE TABLE scores (
    server INTEGER unsigned NOT NULL UNIQUE,
    ts TIMESTAMP not null,
    score REAL NOT NULL DEFAULT 0.0,
    constraint scores_server FOREIGN KEY (server) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;


-- integrating automatic checking/reporting of unreachable servers
CREATE TABLE server_alerts (
    server INT unsigned  NOT NULL primary key,
    last_score REAL NOT NULL DEFAULT 0.0,
    first_email_time datetime,
    last_email_time datetime,
    constraint unusable_servers_server foreign key (server) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;


CREATE TABLE `zone_server_counts` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `zone` int unsigned NOT NULL,
  `date` date NOT NULL,
  `count_active` mediumint(8) unsigned NOT NULL,
  `count_registered` mediumint(8) unsigned NOT NULL,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `zone` (`zone`,`date`),
  constraint zone_server_counts foreign key (zone) references zones(id) on delete cascade
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE `user_privileges` (
  `user` int(10) unsigned NOT NULL default '0',
  `see_all_servers` tinyint(1) not null default 0,
  `see_all_user_profiles` tinyint(1) NOT NULL default '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE server_urls (
  `id` int(10) unsigned NOT NULL auto_increment primary key,
  server INT unsigned  NOT NULL,
  url  varchar(255) not null,
  key (server),
  constraint server_urls_server foreign key (server) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
#2
alter table server_notes
  drop foreign key `server_notes_ibfk_1`;

alter table server_notes
  change server server_id int unsigned not null,
  add CONSTRAINT `server_notes_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#3

alter table servers
  drop foreign key `admin`;

alter table servers
  change created_on created_on datetime not null,
  change admin user_id int unsigned not null,
  add constraint `servers_user_ibfk` foreign key (user_id) references users(id)
;

#4

alter table locations
   drop foreign key locations_server,
   drop foreign key locations_zone;

alter table locations
   change server server_id int unsigned not null,
   change zone   zone_id   int unsigned not null,
   add CONSTRAINT `locations_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
   add CONSTRAINT `locations_zone` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`) ON DELETE CASCADE;

#5
alter table log_scores
   drop foreign key log_scores_server;

alter table log_scores
   change server server_id int unsigned not null,
   add CONSTRAINT `log_scores_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#6
alter table scores
   drop foreign key scores_server;

alter table scores
   change server server_id int unsigned not null,
   add CONSTRAINT `scores_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE

#7

alter table server_alerts
   drop foreign key unusable_servers_server;

alter table server_alerts
   change server server_id int unsigned not null,
   add CONSTRAINT `server_alerts_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;


#8

alter table zone_server_counts
  drop foreign key zone_server_counts;

alter table zone_server_counts
   change zone   zone_id   int unsigned not null,
   add CONSTRAINT `zone_server_counts` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`) ON DELETE CASCADE

#9
alter table user_privileges
   change user   user_id   int unsigned not null;

#10
alter table server_urls
   drop foreign key server_urls_server;

alter table server_urls
   change server server_id int unsigned not null,
   add CONSTRAINT `server_urls_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE

#11
alter table scores drop key `server`, add primary key (server_id);
alter table scores change score score_raw double NOT NULL default '0';

#12
alter table users
   add unique key (username),
   drop key users_email_key;

#13
alter table locations
   modify id int unsigned not null,
   drop primary key,
   add primary key (server_id, zone_id);

alter table locations drop key `server`;

rename table locations to server_zones;

#14
alter table servers
  add score_ts datetime null,
  add score_raw double not null default 0;

update servers s, scores sc set s.score_raw=sc.score_raw, s.score_ts=sc.ts where s.id=sc.server_id;

#15
drop table scores;

#16
alter table zones drop foreign key zones_ibfk_1;
alter table zones
   change parent parent_id int unsigned,
   add constraint `zones_parent` foreign key (parent_id) references zones (id);

#17
alter table user_privileges add primary key `user_id_idx` (user_id);
alter table user_privileges add
   CONSTRAINT `user_privileges_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE

#18
alter table users change email email varchar(255) not null;

#19
alter table log_scores change ts ts datetime not null;

#20
select 1;
#alter table server_notes
#  add CONSTRAINT `server_notes_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#21
alter table servers add deletion_on date;

#22
alter table server_notes
  add created_on datetime not null;

#23

create table logs (
  id int unsigned not null primary key auto_increment,
  server_id int unsigned not null,
  user_id   int unsigned,
  type      varchar(50),
  title     varchar(255),
  message   text,
  created_on datetime not null,
  key (server_id, type),
  CONSTRAINT `server_logs_server_id` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
  CONSTRAINT `server_logs_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#24
alter table server_alerts
  change first_email_time first_email_time datetime not null;

#25 try=1
alter table log_scores drop key `server`, add key `log_scores_server_ts_idx` (`server_id`, `ts`), add key `ts` (`ts`);
alter table log_scores modify id int not null auto_increment first;
alter table users add unique key (`bitcard_id`);

#26
alter table log_scores   change score score double NOT NULL, change step step double NOT NULL;
alter table zones        change name `name` varchar(255) NOT NULL;
alter table users        change bitcard_id bitcard_id varchar(40) default NULL;
alter table server_notes change name `name` varchar(255) NOT NULL;
alter table server_urls  change url `url` varchar(255) NOT NULL;
alter table servers
   change ip `ip` varchar(15) NOT NULL,
   change in_pool `in_pool` tinyint(3) unsigned NOT NULL default '0',
   change in_server_list `in_server_list` tinyint(3) unsigned NOT NULL default '0';
alter table zone_server_counts
   change date `date` date NOT NULL,
   change count_active `count_active` mediumint(8) unsigned NOT NULL,
   change count_registered `count_registered` mediumint(8) unsigned NOT NULL;

#27
select now();
#alter table combust_cache change id id varchar(128) not null first;

#28
CREATE TABLE vendor_zones (
    id int unsigned primary key auto_increment,
    name varchar(255) NOT NULL UNIQUE,
    user_id   int unsigned,
    description  varchar(255) default NULL,
    application  text null,
    devices      int unsigned null,
    rt_ticket    smallint unsigned,
    approved_on  datetime,
    created_on   datetime not null,
    modified_on  timestamp not null,
    CONSTRAINT `vendor_zones_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=INNODB;

alter table logs
  modify server_id      int unsigned null,
  add vendor_zone_id int unsigned null after user_id,
  add CONSTRAINT `logs_vendor_zone_id` FOREIGN KEY (`vendor_zone_id`)
    REFERENCES `vendor_zones` (`id`) ON DELETE CASCADE;

#29
alter table vendor_zones
   change application request_information text null,
   add vendor_cluster tinyint unsigned not null default 0 after user_id,
   add contact_information text null after description;

#30
alter table vendor_zones
   change description organization_name varchar(255) default NULL,
   change name zone_name varchar(90) NOT NULL UNIQUE,
   add status enum('New', 'Pending', 'Approved', 'Rejected') not null default 'New' after zone_name,
   change devices device_count int unsigned null;

#31
alter table user_privileges add vendor_admin tinyint not null default 0;

#32
create table user_equipment_applications (
  id int unsigned not null primary key auto_increment,
  user_id int unsigned not null,
  application text,
  status enum('New', 'Good', 'Maybe', 'No') not null default 'New',
  CONSTRAINT `user_equipment_applications_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#33
alter table user_equipment_applications
  add contact_information text after application;

alter table user_privileges add equipment_admin tinyint not null default 0;

alter table user_equipment_applications
  modify status enum('New', 'Pending', 'Maybe', 'No', 'Approved') not null default 'New';

#34

alter table server_notes
  modify created_on datetime not null,
  modify `server_id` int(10) unsigned NOT NULL;

alter table server_urls
  modify `server_id` int(10) unsigned NOT NULL;

alter table log_scores
  modify `server_id` int(10) unsigned NOT NULL,
  modify `ts` datetime not null;

alter table servers
  modify created_on datetime not null,
  modify `user_id` int(10) unsigned NOT NULL;

alter table server_alerts
   modify first_email_time datetime not null,
   modify `last_score` double NOT NULL;

alter table zone_server_counts
   modify `zone_id` int(10) unsigned NOT NULL,
   modify `date` date not null,
   modify `count_registered` mediumint(8) unsigned NOT NULL,
   modify `count_active` mediumint(8) unsigned NOT NULL,
   add    `netspeed_active` int unsigned not null
;

#35
alter table servers add key (score_ts);

#36
alter table servers
  modify ip varchar(40) NOT NULL,
  add ip_version enum("v4", "v6") not null default 'v4' after ip;

#37
alter table servers add index (deletion_on);

#38
CREATE TABLE if not exists `log_scores_archive` (
  `id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `ts` datetime NOT NULL,
  `score` double NOT NULL default '0',
  `step` double NOT NULL default '0',
  `offset` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#39
create table monitor (
  id int unsigned not null primary key auto_increment,
  ip varchar(40) NOT NULL unique,
  user_id INTEGER unsigned not null references users(id),
  created_on datetime not null,
  last_seen datetime not null,
  CONSTRAINT monitor_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=INNODB;

create table monitor_report (
  monitor_id INTEGER unsigned NOT NULL references monitor(id) on delete cascade,
  server_id INTEGER unsigned NOT NULL,
  ts datetime not null,
  offset REAL,
  stratum tinyint unsigned default NULL,
  CONSTRAINT monitor_report_monitor FOREIGN KEY (monitor_id) REFERENCES monitor(id) ON DELETE CASCADE,
  CONSTRAINT monitor_report_server FOREIGN KEY (server_id) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;

#40
drop table monitor_report;
drop table monitor;

#41
CREATE TABLE if not exists `log_scores_archive_multi` (
  `id` bigint unsigned NOT NULL,
  `monitor_id` int(10) unsigned not null,
  `server_id` int(10) unsigned NOT NULL,
  `ts` datetime NOT NULL,
  `score` double NOT NULL default '0',
  `step` double NOT NULL default '0',
  `offset` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#42
create table monitors (
  id int unsigned not null primary key auto_increment,
  user_id int unsigned,
  name varchar(30) not null,
  ip varchar(40) not null,
  ip_version enum("v4", "v6") not null,
  api_key varchar(40) not null,
  last_seen datetime NULL,
  created_on datetime not null,
  unique key (api_key),
  unique key (ip, ip_version),
  CONSTRAINT `monitors_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) engine=InnoDB default charset=utf8;

#43
alter table log_scores
   modify id bigint unsigned not null auto_increment,
   add monitor_id int unsigned after id;

#44
-- insert into monitors
--  values (1, NULL, 'lax1', '207.171.3.2', 'v4', '', NULL, NOW());

alter table log_scores
   add CONSTRAINT `log_score_monitor_id_fk` FOREIGN KEY (`monitor_id`) REFERENCES `monitors` (`id`);

#45
insert into log_scores_archive_multi
  select id, NULL, server_id, ts, score, step, offset
  from log_scores_archive;

#46
CREATE TABLE server_scores (
  `id` bigint unsigned NOT NULL primary key auto_increment,
  `monitor_id` int(10) unsigned not null,
  `server_id` int(10) unsigned NOT NULL,
  score_ts datetime null,
  score_raw double not null default 0,
  stratum tinyint unsigned default NULL,
  unique key (server_id, monitor_id),
  index (monitor_id, server_id),
  index (monitor_id, score_ts),
  CONSTRAINT `server_score_monitor_fk` FOREIGN KEY (`monitor_id`) REFERENCES `monitors` (`id`),
  CONSTRAINT `server_score_server_id` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#47
select now();

#48
drop table log_scores_archive;
rename table log_scores_archive_multi to log_scores_archive;

#49
select now();

#50
alter table server_scores
  add created_on  datetime not null,
  add modified_on timestamp not null;

#51
alter table zone_server_counts
   add ip_version enum ('v4', 'v6') not null default 'v4'
   after zone_id;

alter table zone_server_counts
    modify ip_version enum ('v4', 'v6') not null;

#52
alter table zone_server_counts
   drop key `zone`,
   add  unique key `zone_date` (`zone_id`, `date`, `ip_version`);

#53
alter table logs modify created_on datetime not null;

#54
alter table user_privileges add support_staff tinyint not null default 0;

#55
update vendor_zones set approved_on = modified_on;

#56
alter table vendor_zones
  add client_type enum ('ntp', 'sntp', 'all') not null default 'ntp'
    after organization_name,
  add dns_root varchar(255) null after organization_name,
  drop vendor_cluster;

#57
create table dns_roots (
  id      int unsigned not null primary key auto_increment,
  origin  varchar(255) not null,
  vendor_available tinyint not null default 0,
  general_use      tinyint not null default 0,
  ns_list varchar(255) not null,
  unique key (origin)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#58
alter table vendor_zones
  add dns_root_id int unsigned,
  drop dns_root,
  drop key `zone_name`,
  drop key `name`,
  add unique key (zone_name, dns_root_id);

#59
select now();

#60

alter table vendor_zones
  modify dns_root_id int unsigned not null;

alter table vendor_zones
  add constraint `dns_root_fk` foreign key (`dns_root_id`) references `dns_roots` (`id`);

#61
-- bug #48
select @zid := id from zones where name = ".";
insert ignore into server_zones select null,id,@zid from servers;

#62
alter table server_notes add modified_on timestamp not null;
update server_notes set modified_on = created_on;

#63
CREATE TABLE `log_status` (
  `server_id` int(10) unsigned NOT NULL primary key,
  `last_check` datetime not null,
  `ts_archived` datetime NOT NULL,
  KEY `log_scores_server_ts_idx` (`server_id`,`last_check`),
  KEY `last_check_idx` (`last_check`),
  CONSTRAINT `log_status_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8

#64
insert ignore into log_status select id, "2014-01-01 00:00:00", 0 from servers order by id;

#65
alter table log_scores add attributes text;

#66
alter table vendor_zones add fb_user int null;

#67
create table `user_identities` (
   id int unsigned not null primary key auto_increment,
   profile_id varchar(255) not null,
   user_id int unsigned not null,
   provider varchar(255) not null,
   data text,
   email varchar(255),
   unique key (profile_id),
   CONSTRAINT `user_identities_user_id` FOREIGN KEY (`user_id`)
      REFERENCES `users` (`id`) on delete cascade
) engine=InnoDB default charset=utf8;

#68
alter table server_zones drop id;

select @uk_id := id from zones where name = "uk";
select @gb_id := id from zones where name = "gb";
insert ignore into server_zones select server_id, @uk_id
 from server_zones where zone_id = @gb_id;
delete from zones where name = 'gb';

#69
alter table log_scores
  modify `score` double NOT NULL DEFAULT 0,
  modify `step` double NOT NULL DEFAULT 0;

#70
alter table server_notes
  modify `name` varchar(255) NOT NULL DEFAULT '';

#71
alter table monitors add config text not null after api_key;
update monitors set config='{"samples": 1}' where config='';

#72
delete from zones where name = 'ap';

#73
create table `log_scores_archive_status` (
  id int unsigned not null primary key auto_increment,
  archiver varchar(255) not null,
  unique key (archiver),
  log_score_id bigint unsigned,
  modified_on  timestamp not null,
  CONSTRAINT `log_score_id` FOREIGN KEY (`log_score_id`)
      REFERENCES `log_scores` (`id`)
) engine=InnoDB default charset=utf8;

#74
CREATE TABLE api_keys (
  id      int(10) unsigned NOT NULL primary key auto_increment,
  api_key varchar(255),
  grants  text,
  created_on  datetime not null,
  modified_on timestamp not null,
  unique key (api_key)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into api_keys values (null, md5(rand()), '{"zonefiles": true}',now(),now());

#75
-- for statuspage.io api configuration, etc
CREATE TABLE system_settings (
  id      int(10) unsigned NOT NULL primary key auto_increment,
  `key`   varchar(255),
  value   text,
  created_on  datetime not null,
  modified_on timestamp not null,
  unique key (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#76
create table account_plans (
   id        int(10) unsigned NOT NULL primary key auto_increment,
   plan_type varchar(255),
   plan_key  varchar(255)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

create table accounts (
   id              int(10) unsigned NOT NULL primary key auto_increment,
   name            varchar(255),
   account_plan_id int unsigned default null,
   constraint `vendor_plan_fk` foreign key (`account_plan_id`) references account_plans (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

create table account_users (
  account_id int(10) unsigned NOT NULL,
  user_id    int(10) unsigned not null,
  constraint `account_users_account_fk` foreign key (`account_id`) references accounts (`id`),
  constraint `account_users_user_fk` foreign key (`user_id`) references users (`id`),
  primary key (account_id, user_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#77
alter table vendor_zones
  change fb_user account_id int unsigned default null,
  add constraint `vendor_zone_account_fk` foreign key (`account_id`) references accounts (`id`);

#78
alter table accounts
  add `organization_name` varchar(150) default NULL,
  add `organization_url` varchar(150) default NULL;

#79
alter table accounts
   add public_profile tinyint(1) not null default 0,
   add url_slug varchar(150) default null,
   add created_on   datetime,
   add modified_on  timestamp not null;

update accounts set created_on = now();
alter table accounts modify created_on datetime not null;

alter table servers
  add account_id int unsigned default null after user_id,
  add constraint `server_account_fk` foreign key (`account_id`) references accounts (`id`);

#80
alter table users
   drop organization_url,
   drop organization_name,
   drop bitcard_id,
   drop nomail,
   drop pass;

#81
alter table logs
   add account_id int unsigned default null after id,
   add CONSTRAINT `account_id_idx` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`);

#82
alter table logs
   drop title,
   add changes text after message;

#83
update accounts set url_slug = null where url_slug = '';
alter table accounts add unique key `url_slug_idx` (url_slug);

#84
CREATE TABLE account_invites (
  id          int(10) unsigned NOT NULL primary key auto_increment,
  account_id  int unsigned not null,
  email       varchar(255) not null,
  status      enum('pending', 'accepted', 'expired'),
  user_id     int unsigned null,
  sent_by_id  int unsigned not null,
  code        varchar(25) not null,
  expires_on  datetime not null,
  created_on  datetime not null,
  modified_on timestamp not null,
  unique key (account_id, email),
  unique key (code),
  constraint `account_invites_account_fk` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`),
  constraint `account_invites_user_fk` foreign key (`user_id`) references users (`id`),
  constraint `account_invites_sent_by_fk` foreign key (`sent_by_id`) references users (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#85
update accounts set name = url_slug where name = '' and url_slug > '';

#86
alter table log_scores
  add rtt mediumint default null after offset;

#87
# fix modified_on being updated by the change to add accounts
update vendor_zones set modified_on = greatest(approved_on, created_on);

#88
update vendor_zones set status='New', modified_on=modified_on where status='Pending';

#89
create table account_subscriptions (
  id          int(10) unsigned NOT NULL primary key auto_increment,
  account_id  int(10) unsigned NOT NULL,
  stripe_subscription_id varchar(255) null,
  status      enum('incomplete', 'incomplete_expired', 'trialing', 'active', 'past_due', 'canceled', 'unpaid') null,
  constraint  `account_subscriptions_account_fk` foreign key (`account_id`) references accounts (`id`),
  unique key (stripe_subscription_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#90
alter table accounts
  drop account_plan_id,
  drop foreign key vendor_plan_fk;

drop table account_plans;

#91
alter table accounts
  add stripe_customer_id varchar(255) null,
  add unique key (stripe_customer_id);

#92
alter table account_subscriptions
  modify status enum('incomplete', 'incomplete_expired', 'trialing', 'active', 'past_due', 'canceled', 'unpaid', 'ended') null,
  add    name        varchar(255) not null,
  add    max_zones   int unsigned not null,
  add    max_clients int unsigned not null;

#93
alter table account_subscriptions
  change max_clients max_devices int unsigned not null,
  add    created_on  datetime not null,
  add    ended_on    datetime null,
  add    modified_on timestamp not null;

#94
alter table monitors
  modify api_key varchar(64)  null,
  add location   varchar(255) not null default '' after name,
  add tls_name   varchar(255) null after ip_version,
  add account_id int unsigned default null after user_id,
  add status     enum('pending', 'testing', 'live', 'paused', 'deleted') not null after api_key,
  add constraint `monitors_account_fk` foreign key (`account_id`) references accounts (`id`),
  add unique key monitors_tls_name (tls_name);

#95
alter table monitors
  modify status  enum('pending', 'testing', 'active', 'paused', 'deleted') not null;

alter table server_scores
  add    status  enum('inactive', 'testing', 'active') not null default 'testing' after stratum;

update server_scores set status = 'active' where score_ts > date_sub(now(), interval 7 day);

#96
alter table monitors modify last_seen datetime(6);

#97
alter table monitors
  add last_submit datetime(6) after last_seen;

#98
alter table monitors
  add client_version varchar(255) not null default '' after config;

#99
alter table monitors
  add type enum('monitor', 'score') not null default 'monitor' after id,
  modify ip varchar(40) null,
  modify ip_version enum ('v4', 'v6') null;

create table `scorer_status` (
  id int unsigned not null primary key auto_increment,
  scorer_id int unsigned not null,
  unique key (scorer_id),
  log_score_id bigint unsigned,
  modified_on  timestamp not null,
  CONSTRAINT `scorer_log_score_id` FOREIGN KEY (`log_score_id`)
      REFERENCES `log_scores` (`id`),
  CONSTRAINT `scores_status_monitor_id_fk` FOREIGN KEY (`scorer_id`)
      REFERENCES `monitors` (`id`)
) engine=InnoDB default charset=utf8;

#100
alter table user_privileges
  drop see_all_user_profiles;

#101
-- for a clickhouse dictionary to lookup the monitor name
drop view if exists monitors_data;
create view monitors_data as
select id, account_id, type,
   IF(type="score", name, SUBSTRING_INDEX(tls_name,'.',1)) as name,
   ip,  ip_version, status, client_version, last_seen, last_submit
from monitors
where tls_name not like '%.system';

#102
create table servers_monitor_review (
  server_id INTEGER unsigned NOT NULL primary key,
  --  monitor_id int unsigned not null,

  last_review datetime,
  next_review datetime,
  last_change datetime,

  config varchar(4096) not null default '',

  key (next_review),

  -- CONSTRAINT `server_monitor_review_monitor_id_fk` FOREIGN KEY (`monitor_id`)
  --    REFERENCES `monitors` (`id`) on delete cascade,
  CONSTRAINT `server_monitor_review_server_id_fk` FOREIGN KEY (`server_id`)
      REFERENCES `servers` (`id`) on delete cascade
) engine=InnoDB default charset=utf8;

insert ignore into servers_monitor_review (server_id, config)
    select id, '{}' from servers where deletion_on is null;

#103
update server_scores set created_on  = score_ts where created_on  < '1970-01-01';
update server_scores set modified_on = score_ts where modified_on < '1970-01-01';

alter table server_scores
  modify status enum('new', 'testing', 'active') not null default 'new';

#104
alter table servers_monitor_review
  modify config varchar(4096) not null default '';

#105
alter table account_subscriptions
  modify stripe_subscription_id varchar(255) COLLATE utf8_bin null;

alter table accounts
  modify stripe_customer_id varchar(255) COLLATE utf8_bin null;

#106
alter table vendor_zones
   add opensource tinyint(1) not null default 0 after device_count,
   add opensource_info text null after opensource;

#107
alter table vendor_zones
  modify client_type enum ('ntp', 'sntp', 'legacy') not null default 'sntp';

update vendor_zones set client_type = 'legacy' where client_type = 'ntp';

#108
-- for data-api queries (todo: move this to clickhouse)
alter table zone_server_counts
  add index `date_idx` (date, zone_id);

#109
alter table vendor_zones
   add device_information text null after request_information;

#110
alter table scorer_status
   modify log_score_id bigint(20) unsigned not null;

#111
insert ignore into system_settings (`key`, `value`, created_on) values ('dns_settings', '{}', NOW());

#112
alter table system_settings
  modify `key`  varchar(255) not null,
  modify value  text not null;

#113
alter table monitors
  add index type_status (`type`, `status`);

#114
insert ignore into system_settings (`key`, `value`, created_on) values ('scorer', '{}', now());

#115
alter table servers
  add netspeed_target mediumint unsigned not null default '10000' after netspeed,
  modify netspeed mediumint unsigned not null default '10000';

update servers set netspeed_target = netspeed;

#116
alter table servers  add flags varchar(4096) NOT NULL DEFAULT '{}';
alter table accounts add flags varchar(4096) NOT NULL DEFAULT '{}' after url_slug;

#117
CREATE TABLE `server_verifications` (
  `id`          int unsigned NOT NULL AUTO_INCREMENT,
  `server_id`   int unsigned NOT NULL,
  `user_id`     int unsigned null,
  `user_ip`     varchar(45) not null default '',
  `verified_on` datetime null,
  `token`       varchar(36),
  `created_on`  datetime NOT NULL,
  `modified_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `server` (`server_id`),
  UNIQUE KEY `token` (`token`),
  CONSTRAINT `server_verifications_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
  CONSTRAINT `server_verifications_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#118
alter table server_verifications
  add indirect_ip varchar(45) not null default '' after user_ip;

#119
create table server_verifications_history like server_verifications;
alter table server_verifications_history
  drop key `server`,
  drop column `token`,
  drop key `server_verifications_ibfk_2`,
  add CONSTRAINT `server_verifications_history_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
  add CONSTRAINT `server_verifications_history_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE

#120
alter table servers
  modify netspeed_target int unsigned not null default '10000' after netspeed,
  modify netspeed int unsigned not null default '10000';

#121
alter table user_identities
  add `created_on`  datetime NOT NULL default '2003-01-27 00:00:00',
  add `modified_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

#122
drop table log_status;

#123

alter table users
  add deleted tinyint(1) NOT NULL DEFAULT '0';

create table user_tasks (
  id         int unsigned NOT NULL AUTO_INCREMENT,
  user_id    int(10) unsigned not null,
  task       enum('download', 'delete') not null,
  status     text not null,
  traceid    varchar(32) not null default '',
  `created_on`  datetime NOT NULL,
  `modified_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  constraint `user_tasks_user_fk` foreign key (`user_id`) references users (`id`),
  primary key (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#124

alter table users
  drop deleted,
  add deletion_on datetime NULL;

#125
alter table user_tasks
  add execute_on datetime null after traceid,
  modify user_id int unsigned null;

#126
alter table servers
  modify user_id int unsigned;

#127
alter table server_scores
  add queue_ts datetime null after status;

#128
alter table monitors
  drop index monitors_tls_name,
  add unique key monitors_tls_name (tls_name, ip_version);

#129
create table monitor_registrations (
    id                 int unsigned NOT NULL AUTO_INCREMENT primary key,
    monitor_id         int unsigned null,

    -- from the client
    request_token      varchar(128) NOT NULL UNIQUE,

    -- generated, provide to the user to authenticate to the api server
    verification_token varchar(32) NOT NULL UNIQUE,

    -- temporary storage for delivery to the client
    -- (todo: come up with something better)
    api_token          text,

    ip                 varchar(39) NOT NULL,
    name               varchar(256) NOT NULL DEFAULT '',
    client             varchar(256) NOT NULL DEFAULT '',
    status             enum('pending', 'approved', 'rejected', 'cancelled') not null,
    last_seen          datetime not null default now(),
    created_on         datetime not null,

    CONSTRAINT `monitor_registrations_monitor_id_fk` FOREIGN KEY (`monitor_id`)
      REFERENCES `monitors` (`id`) on delete cascade
);

#130
create table user_sessions (
  id int unsigned NOT NULL AUTO_INCREMENT primary key,
  user_id       int unsigned not null,
  token_lookup  varchar(16) not null,
  token_hashed  varchar(256) not null,

  last_seen     datetime,
  created_on    datetime not null default now(),

  constraint `user_sessions_user_fk` foreign key (`user_id`) references users (`id`),
  index (token_lookup)
);

#todo
- ...

#1
select now();
#2
alter table server_notes
  drop foreign key `server_notes_ibfk_1`;

alter table server_notes
  change server server_id int unsigned not null,
  add CONSTRAINT `server_notes_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#3

alter table servers
  drop foreign key `admin`;

alter table servers
  change created_on created_on datetime not null,
  change admin user_id int unsigned not null,
  add constraint `servers_user_ibfk` foreign key (user_id) references users(id)
;

#4

alter table locations
   drop foreign key locations_server,
   drop foreign key locations_zone;

alter table locations
   change server server_id int unsigned not null,
   change zone   zone_id   int unsigned not null,
   add CONSTRAINT `locations_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
   add CONSTRAINT `locations_zone` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`) ON DELETE CASCADE;

#5
alter table log_scores
   drop foreign key log_scores_server;

alter table log_scores
   change server server_id int unsigned not null,
   add CONSTRAINT `log_scores_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#6
alter table scores
   drop foreign key scores_server;

alter table scores
   change server server_id int unsigned not null,
   add CONSTRAINT `scores_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE

#7

alter table server_alerts
   drop foreign key unusable_servers_server;

alter table server_alerts
   change server server_id int unsigned not null,
   add CONSTRAINT `server_alerts_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;


#8

alter table zone_server_counts
  drop foreign key zone_server_counts;

alter table zone_server_counts
   change zone   zone_id   int unsigned not null,
   add CONSTRAINT `zone_server_counts` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`) ON DELETE CASCADE

#9
alter table user_privileges
   drop foreign key user_privileges;

alter table user_privileges
   change user   user_id   int unsigned not null,
   add constraint `user_privileges_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;

#10
alter table server_urls
   drop foreign key server_urls_server;

alter table server_urls
   change server server_id int unsigned not null,
   add CONSTRAINT `server_urls_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE

#11
alter table scores drop key `server`, add primary key (server_id);
alter table scores change score score_raw double NOT NULL default '0';

#12
alter table users
   add unique key (username),
   drop key users_email_key;

#13
alter table locations
   modify id int unsigned not null,
   drop primary key,
   add primary key (server_id, zone_id);

alter table locations drop key `server`;

rename table locations to server_zones;

#14
alter table servers
  add score_ts datetime null,
  add score_raw double not null default 0;

update servers s, scores sc set s.score_raw=sc.score_raw, s.score_ts=sc.ts where s.id=sc.server_id;

#15
drop table scores;

#16
alter table zones drop foreign key zones_ibfk_1;
alter table zones
   change parent parent_id int unsigned,
   add constraint `zones_parent` foreign key (parent_id) references zones (id);

#17
alter table user_privileges add primary key (user_id);
alter table user_privileges drop key `user`;

#18
alter table users change email email varchar(255) not null;

#19
alter table log_scores change ts ts datetime not null;

#20
select 1;
#alter table server_notes
#  add CONSTRAINT `server_notes_ibfk_1` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE;

#21
alter table servers add deletion_on date;

#22
alter table server_notes
  add created_on datetime not null;

#23

create table logs (
  id int unsigned not null primary key auto_increment,
  server_id int unsigned not null,
  user_id   int unsigned,
  type      varchar(50),
  title     varchar(255),
  message   text,
  created_on datetime not null,
  key (server_id, type),
  CONSTRAINT `server_logs_server_id` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE,
  CONSTRAINT `server_logs_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#24
alter table server_alerts
  change first_email_time first_email_time datetime not null;

#25 try=1
alter table log_scores drop key `server`, add key `log_scores_server_ts_idx` (`server_id`, `ts`), add key `ts` (`ts`);
alter table log_scores modify id int not null auto_increment first;
alter table users add unique key (`bitcard_id`);

#26
alter table log_scores   change score score double NOT NULL, change step step double NOT NULL;
alter table zones        change name `name` varchar(255) NOT NULL;
alter table users        change bitcard_id bitcard_id varchar(40) default NULL;
alter table server_notes change name `name` varchar(255) NOT NULL;
alter table server_urls  change url `url` varchar(255) NOT NULL;
alter table servers
   change ip `ip` varchar(15) NOT NULL,
   change in_pool `in_pool` tinyint(3) unsigned NOT NULL default '0',
   change in_server_list `in_server_list` tinyint(3) unsigned NOT NULL default '0';
alter table zone_server_counts
   change date `date` date NOT NULL,
   change count_active `count_active` mediumint(8) unsigned NOT NULL,
   change count_registered `count_registered` mediumint(8) unsigned NOT NULL;

#27
select now();
#alter table combust_cache change id id varchar(128) not null first;

#28
CREATE TABLE vendor_zones (
    id int unsigned primary key auto_increment,
    name varchar(255) NOT NULL UNIQUE,
    user_id   int unsigned,
    description  varchar(255) default NULL,
    application  text null,
    devices      int unsigned null,
    rt_ticket    smallint unsigned,
    approved_on  datetime,
    created_on   datetime not null,
    modified_on  timestamp not null,
    CONSTRAINT `vendor_zones_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=INNODB;

alter table logs
  modify server_id      int unsigned null,
  add vendor_zone_id int unsigned null after user_id,
  add CONSTRAINT `logs_vendor_zone_id` FOREIGN KEY (`vendor_zone_id`)
    REFERENCES `vendor_zones` (`id`) ON DELETE CASCADE;

#29
alter table vendor_zones
   change application request_information text null,
   add vendor_cluster tinyint unsigned not null default 0 after user_id,
   add contact_information text null after description;

#30
alter table vendor_zones
   change description organization_name varchar(255) default NULL,
   change name zone_name varchar(90) NOT NULL UNIQUE,
   add status enum('New', 'Pending', 'Approved', 'Rejected') not null default 'New' after zone_name,
   change devices device_count int unsigned null;

#31
alter table user_privileges add vendor_admin tinyint not null default 0;

#32
create table user_equipment_applications (
  id int unsigned not null primary key auto_increment,
  user_id int unsigned not null,
  application text,
  status enum('New', 'Good', 'Maybe', 'No') not null default 'New',
  CONSTRAINT `user_equipment_applications_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#33
alter table user_equipment_applications
  add contact_information text after application;

alter table user_privileges add equipment_admin tinyint not null default 0;

alter table user_equipment_applications
  modify status enum('New', 'Pending', 'Maybe', 'No', 'Approved') not null default 'New';

#34

alter table server_notes
  modify created_on datetime not null,
  modify `server_id` int(10) unsigned NOT NULL;

alter table server_urls
  modify `server_id` int(10) unsigned NOT NULL;

alter table log_scores
  modify `server_id` int(10) unsigned NOT NULL,
  modify `ts` datetime not null;

alter table servers
  modify created_on datetime not null,
  modify `user_id` int(10) unsigned NOT NULL;

alter table server_alerts
   modify first_email_time datetime not null,
   modify `last_score` double NOT NULL;

alter table zone_server_counts
   modify `zone_id` int(10) unsigned NOT NULL,
   modify `date` date not null,
   modify `count_registered` mediumint(8) unsigned NOT NULL,
   modify `count_active` mediumint(8) unsigned NOT NULL,
   add    `netspeed_active` int unsigned not null
;

#35
alter table servers add key (score_ts);

#36
alter table servers
  modify ip varchar(40) NOT NULL,
  add ip_version enum("v4", "v6") not null default 'v4' after ip;

#37
alter table servers add index (deletion_on);

#38
CREATE TABLE if not exists `log_scores_archive` (
  `id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `ts` datetime NOT NULL,
  `score` double NOT NULL default '0',
  `step` double NOT NULL default '0',
  `offset` double default NULL
) ENGINE=ARCHIVE DEFAULT CHARSET=utf8;

#39
create table monitor (
  id int unsigned not null primary key auto_increment,
  ip varchar(40) NOT NULL unique,
  user_id INTEGER unsigned not null references users(id),
  created_on datetime not null,
  last_seen datetime not null,
  CONSTRAINT monitor_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=INNODB;

create table monitor_report (
  monitor_id INTEGER unsigned NOT NULL references monitor(id) on delete cascade,
  server_id INTEGER unsigned NOT NULL,
  ts datetime not null,
  offset REAL,
  stratum tinyint unsigned default NULL,
  CONSTRAINT monitor_report_monitor FOREIGN KEY (monitor_id) REFERENCES monitor(id) ON DELETE CASCADE,
  CONSTRAINT monitor_report_server FOREIGN KEY (server_id) REFERENCES servers(id) ON DELETE CASCADE
) ENGINE=INNODB;

#40
drop table monitor_report;
drop table monitor;

#41
CREATE TABLE if not exists `log_scores_archive_multi` (
  `id` bigint unsigned NOT NULL,
  `monitor_id` int(10) unsigned not null,
  `server_id` int(10) unsigned NOT NULL,
  `ts` datetime NOT NULL,
  `score` double NOT NULL default '0',
  `step` double NOT NULL default '0',
  `offset` double default NULL
) ENGINE=ARCHIVE DEFAULT CHARSET=utf8;

#42
create table monitors (
  id int unsigned not null primary key auto_increment,
  user_id int unsigned,
  name varchar(30) not null,
  ip varchar(40) not null,
  ip_version enum("v4", "v6") not null,
  api_key varchar(40) not null,
  last_seen datetime NULL,
  created_on datetime not null,
  unique key (api_key),
  unique key (ip, ip_version),
  CONSTRAINT `monitors_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) engine=InnoDB default charset=utf8;

#43
alter table log_scores
   modify id bigint unsigned not null auto_increment,
   add monitor_id int unsigned after id;

#44
-- insert into monitors
--  values (1, NULL, 'lax1', '207.171.3.2', 'v4', '', NULL, NOW());

alter table log_scores
   add CONSTRAINT `log_score_monitor_id_fk` FOREIGN KEY (`monitor_id`) REFERENCES `monitors` (`id`);

#45
insert into log_scores_archive_multi
  select id, NULL, server_id, ts, score, step, offset
  from log_scores_archive;

#46
CREATE TABLE server_scores (
  `id` bigint unsigned NOT NULL primary key auto_increment,
  `monitor_id` int(10) unsigned not null,
  `server_id` int(10) unsigned NOT NULL,
  score_ts datetime null,
  score_raw double not null default 0,
  stratum tinyint unsigned default NULL,
  unique key (server_id, monitor_id),
  index (monitor_id, server_id),
  index (monitor_id, score_ts),
  CONSTRAINT `server_score_monitor_fk` FOREIGN KEY (`monitor_id`) REFERENCES `monitors` (`id`),
  CONSTRAINT `server_score_server_id` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#47
select now();

#48
drop table log_scores_archive;
rename table log_scores_archive_multi to log_scores_archive;

#49
select now();

#50
alter table server_scores
  add created_on  datetime not null,
  add modified_on timestamp not null;

#51
alter table zone_server_counts
   add ip_version enum ('v4', 'v6') not null default 'v4'
   after zone_id;

alter table zone_server_counts
    modify ip_version enum ('v4', 'v6') not null;

#52
alter table zone_server_counts
   drop key `zone`,
   add  unique key `zone_date` (`zone_id`, `date`, `ip_version`);

#53
alter table logs modify created_on datetime not null;

#54
alter table user_privileges add support_staff tinyint not null default 0;

#55
update vendor_zones set approved_on = modified_on;

#56
alter table vendor_zones
  add client_type enum ('ntp', 'sntp', 'all') not null default 'ntp'
    after organization_name,
  add dns_root varchar(255) null after organization_name,
  drop vendor_cluster;

#57
create table dns_roots (
  id      int unsigned not null primary key auto_increment,
  origin  varchar(255) not null,
  vendor_available tinyint not null default 0,
  general_use      tinyint not null default 0,
  ns_list varchar(255) not null,
  unique key (origin)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#58
alter table vendor_zones
  add dns_root_id int unsigned,
  drop dns_root,
  drop key `zone_name`,
  drop key `name`,
  add unique key (zone_name, dns_root_id);

#59
alter table vendor_zones
  add constraint `dns_root_fk` foreign key (`dns_root_id`) references `dns_roots` (`id`);

#60
alter table vendor_zones
  modify dns_root_id int unsigned not null;

#61
-- bug #48
select @zid := id from zones where name = ".";
insert ignore into server_zones select id,@zid from servers;

#62
alter table server_notes add modified_on timestamp not null;
update server_notes set modified_on = created_on;

#63
CREATE TABLE `log_status` (
  `server_id` int(10) unsigned NOT NULL primary key,
  `last_check` datetime not null,
  `ts_archived` datetime NOT NULL,
  KEY `log_scores_server_ts_idx` (`server_id`,`last_check`),
  KEY `last_check_idx` (`last_check`),
  CONSTRAINT `log_status_server` FOREIGN KEY (`server_id`) REFERENCES `servers` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8

#64
insert ignore into log_status select id, "2014-01-01 00:00:00", 0 from servers order by id;

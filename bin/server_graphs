# -*- cperl -*-
eval 'exec $CBROOT/bin/perl $0 ${1+"$@"}'
  unless $running_under_some_shell;
use strict;
use warnings;
use File::Path qw(mkpath);
use RRDs;

my $rrd_path = "$ENV{CBROOTLOCAL}/rrd/server";
mkpath $rrd_path unless -e $rrd_path;

use NP::Model;

NP::Model->dbh->selectrow_array(q[SELECT GET_LOCK("server_graphs", 0)]) or exit;

my $populate_all = @ARGV and $ARGV[0] eq 'populate_all' ? 1 : 0;

my $servers = NP::Model->server->get_servers_iterator;

while (my $server = $servers->next) { 

    NP::Model->log_score->create(server => $server)->create_rrd;

    if ($populate_all) {

        warn "Server: ", $server->id, " / ", $server->ip;

	my $lastupdate = RRDs::last $server->rrd_path;

        my $scores = NP::Model->log_score->get_log_scores_iterator
          (query => [ server_id => $server->id,
		      ts => { '>', DateTime->from_epoch( epoch => $lastupdate ) },
		    ],
           sort_by => 'ts'
          );
        while (my $ls = $scores->next) {
            # warn "got ls, ts: ", $ls->ts;
            $ls->update_rrd;
        } 
    }

    #next unless $server->id >= 300; #  and $server->id < 370;
    #$server->update_graphs;
}

